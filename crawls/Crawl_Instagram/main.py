from profile_scraper import scrape_profiles
from post_scraper import scrape_posts
import os
import json
import traceback
from flask import make_response, jsonify

def crawl_instagram(request):
    """
    H√†m x·ª≠ l√Ω HTTP trigger cho Cloud Functions.
    C√†o d·ªØ li·ªáu t·ª´ Instagram v√† tr·∫£ v·ªÅ k·∫øt qu·∫£ d∆∞·ªõi d·∫°ng JSON.
    """
    urls_file = "urls.txt"            # File ch·ª©a danh s√°ch URL
    output_profile_file = "/tmp/instagram_data.json"
    output_post_file = "/tmp/instagram_post.json"  # File l∆∞u d·ªØ li·ªáu c√†o v·ªÅ
    results_limit = 1

    # Ki·ªÉm tra xem file urls.txt c√≥ t·ªìn t·∫°i kh√¥ng
    if not os.path.exists(urls_file):
        print("[‚ùå] Kh√¥ng t√¨m th·∫•y file urls.txt")
        return make_response(jsonify({"error": "File urls.txt kh√¥ng t·ªìn t·∫°i"}), 500)

    try:
        print("[üöÄ] B·∫Øt ƒë·∫ßu c√†o d·ªØ li·ªáu profile...")
        scrape_profiles(urls_file)
        print("[‚úÖ] Ho√†n t·∫•t c√†o d·ªØ li·ªáu profile.")
    except Exception as e:
        print("[‚ùå] L·ªói khi c√†o d·ªØ li·ªáu profile:", e)
        traceback.print_exc()
        return make_response(jsonify({
            "error": "L·ªói khi c√†o d·ªØ li·ªáu profile",
            "details": str(e),
            "trace": traceback.format_exc()
        }), 500)

    try:
        print("[üöÄ] B·∫Øt ƒë·∫ßu c√†o d·ªØ li·ªáu post...")
        scrape_posts(urls_file, results_limit)
        print("[‚úÖ] Ho√†n t·∫•t c√†o d·ªØ li·ªáu post.")
    except Exception as e:
        print("[‚ùå] L·ªói khi c√†o d·ªØ li·ªáu post:", e)
        traceback.print_exc()
        return make_response(jsonify({
            "error": "L·ªói khi c√†o d·ªØ li·ªáu post",
            "details": str(e),
            "trace": traceback.format_exc()
        }), 500)

    response_data = {
        "message": "D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c c√†o th√†nh c√¥ng t·ª´ Instagram",
        "profile_data_file": output_profile_file,
        "post_data_file": output_post_file
    }

    return jsonify(response_data)
